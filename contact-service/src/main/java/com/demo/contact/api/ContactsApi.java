/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.demo.contact.api;

import com.demo.contact.api.model.Contact;
import com.demo.contact.api.model.Contacts;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Api(value = "contacts", description = "the contacts API")
public interface ContactsApi {

    Logger log = LoggerFactory.getLogger(ContactsApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Use to add new contact", nickname = "createContact", notes = "", response = Contact.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "OK", response = Contact.class) })
    @RequestMapping(value = "/contacts",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<Contact> createContact(@ApiParam(value = "Object is use for to create contact.  - `first_name`  - `last_name`  - 'email' " ,required=true )  @Valid @RequestBody Contact contact) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"phone\" : \"+91909232199\",  \"last_name\" : \"Trump\",  \"id\" : \"c0f55f62-b990-47bc-8caa-f42313669948\",  \"first_name\" : \"John\",  \"email\" : \"jt@domain.com\",  \"status\" : \"INACTIVE\"}", Contact.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ContactsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Delete/Inactivate a contact", nickname = "deleteContact", notes = "Use to delete contact information by using id", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 204, message = "No content found") })
    @RequestMapping(value = "/contacts/{id}",
        method = RequestMethod.DELETE)
    default ResponseEntity<Void> deleteContact(@ApiParam(value = "Its service generated contact unique id",required=true) @PathVariable("id") String id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ContactsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "List contacts", nickname = "findAllContacts", notes = "Find All contacts(List contacts)", response = Contacts.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Contacts.class) })
    @RequestMapping(value = "/contacts",
        method = RequestMethod.GET)
    default ResponseEntity<Contacts> findAllContacts() {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", Contacts.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ContactsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Find Contact Information by Id", nickname = "findContact", notes = "Find Contact Information by Id", response = Contact.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Contact.class) })
    @RequestMapping(value = "/contacts/{id}",
        method = RequestMethod.GET)
    default ResponseEntity<Contact> findContact(@ApiParam(value = "Its service generated contact unique id",required=true) @PathVariable("id") String id) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"phone\" : \"+91909232199\",  \"last_name\" : \"Trump\",  \"id\" : \"c0f55f62-b990-47bc-8caa-f42313669948\",  \"first_name\" : \"John\",  \"email\" : \"jt@domain.com\",  \"status\" : \"INACTIVE\"}", Contact.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ContactsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }


    @ApiOperation(value = "Edit Contact", nickname = "updateContact", notes = "Use to update contact information", response = Contact.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "OK", response = Contact.class),
        @ApiResponse(code = 204, message = "No content found") })
    @RequestMapping(value = "/contacts/{id}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    default ResponseEntity<Contact> updateContact(@ApiParam(value = "Its service generated contact unique id",required=true) @PathVariable("id") String id,@ApiParam(value = "Object is use for to update contact.  - `first_name`  - `last_name`  - 'email' " ,required=true )  @Valid @RequestBody Contact contact) {
        if(getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
            if (getAcceptHeader().get().contains("application/json")) {
                try {
                    return new ResponseEntity<>(getObjectMapper().get().readValue("{  \"phone\" : \"+91909232199\",  \"last_name\" : \"Trump\",  \"id\" : \"c0f55f62-b990-47bc-8caa-f42313669948\",  \"first_name\" : \"John\",  \"email\" : \"jt@domain.com\",  \"status\" : \"INACTIVE\"}", Contact.class), HttpStatus.NOT_IMPLEMENTED);
                } catch (IOException e) {
                    log.error("Couldn't serialize response for content type application/json", e);
                    return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
                }
            }
        } else {
            log.warn("ObjectMapper or HttpServletRequest not configured in default ContactsApi interface so no example is generated");
        }
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
    }

}
